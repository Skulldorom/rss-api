name: Build, Test, and Push Docker image

on:
  push:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set lowercase repo owner
        run: echo "REPO_OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Set image tag
        id: meta
        run: echo "image_tag=rss-api:${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: docker build -t rss-api:${GITHUB_SHA} .

      - name: Run container in background for testing
        run: |
          docker run -d \
            -p 5000:5000 \
            --name test-server \
            -e FRESHRSS_HOST="http://localhost:8020" \
            -e FRESHRSS_USER="user" \
            -e FRESHRSS_PASS="password" \
            rss-api:${GITHUB_SHA}

      - name: Wait for server to start
        run: |
          for i in {1..10}; do
            curl --fail http://localhost:5000 && exit 0
            sleep 2
          done
          docker logs test-server
          exit 1

      - name: Stop and remove container
        run: docker rm -f test-server

  push:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set lowercase repo owner
        run: echo "REPO_OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t rss-api:${GITHUB_SHA} .

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_DOCKER_PULL }}

      - name: Tag image for GHCR
        run: |
          docker tag rss-api:${GITHUB_SHA} ghcr.io/${REPO_OWNER_LC}/rss-api:${GITHUB_SHA}
          docker tag rss-api:${GITHUB_SHA} ghcr.io/${REPO_OWNER_LC}/rss-api:latest

      - name: Push image to GHCR
        run: |
          docker push ghcr.io/${REPO_OWNER_LC}/rss-api:${GITHUB_SHA}
          docker push ghcr.io/${REPO_OWNER_LC}/rss-api:latest
